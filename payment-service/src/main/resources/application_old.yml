# ?? ??
server:
  port: 8085

spring:
  application:
    name: payment-service
  profiles:
    active: local
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  main:
    allow-bean-definition-overriding: true

springdoc:
  api-docs:
    path: /v1/api-docs
  swagger-ui:
    path: /swagger-ui.html

# ?? ?? ??? ??
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: false
  info:
    env:
      enabled: true

---
# local ?? ??
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://localhost:3306/ecommerce
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: latest
      enable-auto-commit: true
      group-id: product-service
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        enable.auto.commit: false
    listener:
      type: batch
      ack-mode: manual_immediate

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

logging:
  file:
    name: /logs/e-commerce.log
  level:
    root: INFO
    org.springframework.web: INFO
    com.commerce.productservice: INFO

---
# dev ?? ??
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://mysql-service:3306/ecommerce
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: kafka-service:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: latest
      enable-auto-commit: true
      group-id: product-service
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        enable.auto.commit: false
    listener:
      type: batch
      ack-mode: manual_immediate

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-service:8761/eureka

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    com.commerce.paymentservice: INFO