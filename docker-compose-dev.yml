services:
  # 모니터링 도구
  prometheus:
    container_name: prometheus
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - ecommerce-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - ecommerce-network
    depends_on:
      - prometheus

  # 코어 서비스
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - ecommerce-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - ecommerce-network
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -sf http://localhost:8888/actuator/health | grep -q '\"status\":\"UP\"'" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=local
      - GITHUB_USERNAME=${GITHUB_USERNAME}
      - GITHUB_TOKEN=${GITHUB_TOKEN}

  apigateway-service:
    build:
      context: ./apigateway-service
      dockerfile: Dockerfile
    container_name: apigateway-service
    ports:
      - "8000:8000"
    networks:
      - ecommerce-network
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CONFIG_SERVER_URI=http://config-server:8888

  # 도메인 서비스
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    networks:
      - ecommerce-network
    depends_on:
      config-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CONFIG_SERVER_URI=http://config-server:8888

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    networks:
      - ecommerce-network
    depends_on:
      config-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CONFIG_SERVER_URI=http://config-server:8888

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    networks:
      - ecommerce-network
    depends_on:
      config-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CONFIG_SERVER_URI=http://config-server:8888

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    networks:
      - ecommerce-network
    depends_on:
      config-server:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CONFIG_SERVER_URI=http://config-server:8888
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    networks:
      - ecommerce-network
    depends_on:
      config-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CONFIG_SERVER_URI=http://config-server:8888

  image-service:
    build:
      context: ./image-service
      dockerfile: Dockerfile
    container_name: image-service
    networks:
      - ecommerce-network
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - CONFIG_SERVER_URI=http://config-server:8888
